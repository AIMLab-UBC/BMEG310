data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 3*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
return(data)
# for (i in (1:ncol(data)){
#
# }
}
data2 = funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 5*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
return(data)
# for (i in (1:ncol(data)){
#
# }
}
data2 = funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 10*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
return(data)
# for (i in (1:ncol(data)){
#
# }
}
data2 = funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 15*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
return(data)
# for (i in (1:ncol(data)){
#
# }
}
data2 = funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 20*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
return(data)
# for (i in (1:ncol(data)){
#
# }
}
data2 = funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 30*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
return(data)
# for (i in (1:ncol(data)){
#
# }
}
data2 = funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 35*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
return(data)
# for (i in (1:ncol(data)){
#
# }
}
data2 = funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 40*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
return(data)
# for (i in (1:ncol(data)){
#
# }
}
data2 = funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 50*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
return(data)
# for (i in (1:ncol(data)){
#
# }
}
data2 = funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
print(meanSD)
maxSD = max(data$SD)
print(maxSD)
GenesID = which(data$SD > 50*meanSD)
genesName = row.names(data)[GenesID]
print(genesName)
}
funFilter("data/GSE71562.csv")
data = read.csv("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
GeneIDs = which(data$SD > 50*meanSD)
geneNameS = row.names(data)[GeneIDs]
print(geneNameS)
}
funFilter("data/GSE71562.csv")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv("data/GSE71562.csv")
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
GeneIDs = which(data$SD > 50*meanSD)
geneNameS = row.names(data)[GeneIDs]
print(length(geneNameS))
print(geneNameS)
}
funFilter("data/GSE71562.csv")
data = read.delim("data/FASTA_FOXO.txt")
View(data)
data = readChar("data/FASTA_FOXO.txt")
data = read.delim("data/FASTA_FOXO.txt")
View(data)
fastaReader <- function(path){
data = read.delim(path)
data = data[-1,]
return() data
fastaReader <- function(path){
data = read.delim(path)
data = data[-1,]
return(data)
}
fastaReader("data/FASTA_FOXO.txt")
View(data)
fastaReader <- function(path){
data = read.delim(path)
# data = data[-1,]
return(data)
}
fastaReader("data/FASTA_FOXO.txt")
View(data)
View(data)
View(data)
fastaReader <- function(path){
data = read.delim(path)
data$numCHar = apply(data,1,nchar)
# for (i in seq(1:nrow(data))){
#
#
# }
return(data)
}
fastaReader("data/FASTA_FOXO.txt")
View(data)
fastaReader <- function(path){
data = read.delim(path)
data$numCHar = apply(data,1,nchar)
# for (i in seq(1:nrow(data))){
#
#
# }
return(data)
}
data2 = fastaReader("data/FASTA_FOXO.txt")
View(data2)
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print(total)
# for (i in seq(1:nrow(data))){
#
#
# }
return(data)
}
data2 = fastaReader("data/FASTA_FOXO.txt")
# I name my function as "funFilter"
funFilter <- function(path){
data = read.csv(path)
row.names(data) = data[,1]
data = data[,-1]
data$Avg_score = apply(data, 1, mean)
GeneID = which.max(data$Avg_score)
geneName = row.names(data)[GeneID]
print(geneName)
data$SD = apply(data, 1, sd)
meanSD = mean(data$SD)
GeneIDs = which(data$SD > 2*data$Avg_score)
geneNameS = row.names(data)[GeneIDs]
print(length(geneNameS))
print(geneNameS)
}
funFilter("data/GSE71562.csv")
View(data)
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print(total)
unlist(gregexpr(pattern ='2',"the2quickbrownfoxeswere2tired"))
for (i in seq(1:nrow(data))){
charStr = data[i,]
nC = (gregexpr(pattern ='C',charStr))
print(nC)
}
return(data)
}
data2 = fastaReader("data/FASTA_FOXO.txt")
View(data)
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print(total)
unlist(gregexpr(pattern ='2',"the2quickbrownfoxeswere2tired"))
for (i in seq(1:nrow(data))){
charStr = data[i,]
nC = unlist(gregexpr(pattern ='C',charStr))
print(nC)
}
return(data)
}
data2 = fastaReader("data/FASTA_FOXO.txt")
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print(total)
unlist(gregexpr(pattern ='2',"the2quickbrownfoxeswere2tired"))
for (i in seq(1:nrow(data))){
charStr = data[i,]
nC = length(unlist(gregexpr(pattern ='C',charStr)))
print(nC)
}
return(data)
}
data2 = fastaReader("data/FASTA_FOXO.txt")
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print("length of sequence:")
print(total)
for (i in seq(1:nrow(data))){
charStr = data[i,1]
nC = length(unlist(gregexpr(pattern ='C',charStr)))
nG = length(unlist(gregexpr(pattern ='C',charStr)))
data$nGnC[i]=nG/nC
}
ratio = apply(data$nGnC,2,sum)
print("Ratio of C/G:")
return(data)
}
data2 = fastaReader("data/FASTA_FOXO.txt")
View(data2)
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print("length of sequence:")
print(total)
for (i in seq(1:nrow(data))){
charStr = data[i,1]
nC = length(unlist(gregexpr(pattern ='C',charStr)))
nG = length(unlist(gregexpr(pattern ='G',charStr)))
data$nGnC[i]=nG/nC
}
ratio = apply(data$nGnC,2,sum)
print("Ratio of C/G:")
return(data)
}
data2 = fastaReader("data/FASTA_FOXO.txt")
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print("length of sequence:")
print(total)
for (i in seq(1:nrow(data))){
charStr = data[i,1]
nC = length(unlist(gregexpr(pattern ='C',charStr)))
nG = length(unlist(gregexpr(pattern ='G',charStr)))
data$nGnC[i]=nG/nC
}
ratio = sum(data$nGnC,2)
print("Ratio of C/G:")
return(data)
}
data2 = fastaReader("data/FASTA_FOXO.txt")
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print("length of sequence:")
print(total)
for (i in seq(1:nrow(data))){
charStr = data[i,1]
nC = length(unlist(gregexpr(pattern ='C',charStr)))
nG = length(unlist(gregexpr(pattern ='G',charStr)))
data$nGnC[i]=nG/nC
}
ratio = sum(data$nGnC,2)
print("Ratio of C/G:")
print(ratio)
return(data)
}
data2 = fastaReader("data/FASTA_FOXO.txt")
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print("length of sequence:")
print(total)
for (i in seq(1:nrow(data))){
charStr = data[i,1]
nC = length(unlist(gregexpr(pattern ='C',charStr)))
nG = length(unlist(gregexpr(pattern ='G',charStr)))
data$nGnC[i]=nG/nC
}
ratio = sum(data$nGnC,2)
print("Ratio of C/G:")
print(ratio)
return(data)
}
fastaReader("data/FASTA_FOXO.txt")
fastaReader <- function(path){
data = read.delim(path)
data$numChar = apply(data,1,nchar)
total = sum(data$numChar,2)
print("length of sequence:")
print(total)
for (i in seq(1:nrow(data))){
charStr = data[i,1]
nC = length(unlist(gregexpr(pattern ='C',charStr)))
nG = length(unlist(gregexpr(pattern ='G',charStr)))
data$nGnC[i]=nG/nC
}
ratio = sum(data$nGnC,2)
print("Ratio of C/G:")
print(ratio)
return(data)
}
fastaReader("data/FASTA_FOXO.txt")
str_count("aliaaaban", "a")
a = c(1,2,3)
a
getwd()
path = "C:/Users/Ali Chamkalani/Documents/GitHub/bmeg310/Tutorial 1/2- R basics/data/GSE71562.csv"
print(path)
path = "C:/Users/Ali Chamkalani/Documents/GitHub/bmeg310/Tutorial 1/2- R basics/data/GSE71562.csv"
print(path)
mat = read.csv(path)
View(mat)
getwd()
View(mat)
path = "C:/Users/Ali Chamkalani/Documents/GitHub/bmeg310/Tutorial 1/2- R basics/data/GSE71562.csv"
print(path)
mat = read.csv(path)
ave = apply(mat, mean, 1)
?aaply
?apply
path = "C:/Users/Ali Chamkalani/Documents/GitHub/bmeg310/Tutorial 1/2- R basics/data/GSE71562.csv"
print(path)
mat = read.csv(path)
ave = apply(mat, 1, mean)
ave
View(mat)
?sd
setwd("C:/Users/Ali Chamkalani/Documents/GitHub/bmeg310/Tutorial 1/2- R basics")
calculator <- function(x){
x2 = x+5
print(x2)
}
calculator(7)
